this["App"] = this["App"] || {};
this["App"]["templates"] = this["App"]["templates"] || {};
this["App"]["templates"]["card"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <dt><a id=\"speed\" class=\"stat\">Top Speed</a></dt>\n    <dd><a id=\"speed\" class=\"stat\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.speed)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " mph</a></dd>\n    <dt><a id=\"sixty\" class=\"stat\">0 - 60 mph</a></dt>\n    <dd><a id=\"sixty\" class=\"stat\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.sixty)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " sec</a></dd>\n    <dt><a id=\"power\" class=\"stat\">Power</a></dt>\n    <dd><a id=\"power\" class=\"stat\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.power)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " bhp</a></dd>\n    <dt><a id=\"engine\" class=\"stat\">Capacity</a></dt>\n    <dd><a id=\"engine\" class=\"stat\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.engine)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " cc</a></dd>\n    <dt><a id=\"weight\" class=\"stat\">Weight</a></dt>\n    <dd><a id=\"weight\" class=\"stat\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.weight)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " Kg</a></dd>\n  ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += "\n    <dt class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.speed)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">Top Speed</dt>\n    <dd class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.speed)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.speed)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " mph</dd>\n    <dt class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.sixty)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">0 - 60 mph</dt>\n    <dd class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.sixty)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.sixty)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " sec</dd>\n    <dt class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.power)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">Power</dt>\n    <dd class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.power)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.power)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " bhp</dd>\n    <dt class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.engine)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">Capacity</dt>\n    <dd class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.engine)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.engine)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " cc</dd>\n    <dt class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.weight)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">Weight</dt>\n    <dd class=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.classes)),stack1 == null || stack1 === false ? stack1 : stack1.weight)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.weight)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " Kg</dd>\n  ";
  return buffer;
  }

  buffer += "<div class=\"country\">\n  <img src=\"assets/images/flags/"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.country)),stack1 == null || stack1 === false ? stack1 : stack1.image)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" alt=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.country)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" />\n</div>\n<h2>"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</h2>\n<img src=\"assets/images/cars/"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.image)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + ".png\" alt=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.car)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" />\n<dl>\n  ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.interactive), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n</dl>\n";
  return buffer;
  });;
this["App"] = this["App"] || {};
this["App"]["templates"] = this["App"]["templates"] || {};
this["App"]["templates"]["player"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"container\">\n  <div class=\"score\">\n    ";
  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n  </div>\n  <div class=\"card\">\n    ";
  if (helper = helpers.card) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.card); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n  </div>\n</div>\n";
  return buffer;
  });;
this["App"] = this["App"] || {};
this["App"]["templates"] = this["App"]["templates"] || {};
this["App"]["templates"]["score"] = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<ul>\n  <li class=\"name\">Name: ";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</li>\n  <li class=\"games\">Games: ";
  if (helper = helpers.games) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.games); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</li>\n  <li class=\"cards\">Cards: ";
  if (helper = helpers.cards) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.cards); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</li>\n</ul>\n";
  return buffer;
  });;